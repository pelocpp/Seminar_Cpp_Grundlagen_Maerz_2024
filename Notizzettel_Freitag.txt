==============

C++ Grundlagen

Guten Morgen

Freitag

Peter Loos

peter.loos@gmx.de

https://github.com/pelocpp

==============

13.00 bis 13.30

16 Uhr ca.  

==============

STL Anwendung:

Kontakte-Verwaltung // Phonebook

== std::vector (Vektor)   // std::unordered_map (Hash-Tabelle)

   Sequential Container   // Assoziatic-Container

   Performanz-Vergleich

== Aufrufbare Objekte - Lambdas 

   Lambda: Aufrufbares Objekt

==============

Assoziatic-Container:

Hash-Tabelle

======================================================

Roter Faden:

2 Realisierungen: 

insert

search

remove

======================================================

KritiK:   RVO   NRVO

Return Value Optimization

Auslassen von Kopier- oder Verschiebe-Operationen
-------------------------------------------------

to elide  // Elision  ===> auslassen, weglassen

===> Copy/Move Elision

https://github.com/pelocpp/cpp_modern/blob/master/GeneralSnippets/CopyMoveElision/CopyMoveElision.md

======================================================

scattered storage ==> verteilte Speicherbereiche // NICHT:  continuous

C++: A programmer knows what he does

C#:  Robustheit

======================================================

Benchmark:

std::string:

Für "kleine" Zeichenkette ist in der Klasse std::string ein interner Puffer vorhanden:

std::string ("ABC");

======================================================

Call-to-Action:  Man überlege sich gut, welcher Container wann einzusetzen ist.

======================================================
